package com.inyc.asenergy.components {	import fl.controls.Button;		import com.inyc.asenergy.components.BasicButton;	import com.inyc.asenergy.components.DialogBox;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFormat;		/**	 * @author stevewarren	 */	public class MessageDialog extends DialogBox {		public var btn_close:BasicButton;		//public var btn_ok:ButtonComponent;				public var bg:MovieClip;				public var title:TextField;		public var header:TextField;		public var body:TextField;				private var _titleText:String;		private var _headerText:String;		private var _bodyText:String;				private var _buttonStrings:Array;		private var _buttons:Array = new Array();		public function MessageDialog(bodyText:String, headerText:String = "", titleText:String = "", buttonStrings:Array = null) {			super();						_titleText = titleText;			_headerText = headerText;			_bodyText = bodyText;						if (buttonStrings==null) buttonStrings = ["OK"];			_buttonStrings = buttonStrings;						addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}				override protected function onAddedToStage(e:Event):void{			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			addListeners();			displayText();			createButtons();		}				private function addListeners(){			btn_close.addEventListener(BasicButton.EVENT_CLICK, onMouseEvent);			//btn_ok.addEventListener(ButtonComponent.EVENT_CLICK, onMouseEvent);					}				private function removeListeners(){			btn_close.removeEventListener(BasicButton.EVENT_CLICK, onMouseEvent);			//btn_ok.removeEventListener(ButtonComponent.EVENT_CLICK, onMouseEvent);					}								private function displayText(){			if (_titleText != "") title.text = _titleText;			if (_headerText != "") header.text = _headerText;			if (_bodyText != "") body.text = _bodyText;						if (body.textHeight > 100){				var increase = body.textHeight - 50;				if (increase > 300) increase = 300;				bg.height += increase;								body.height += increase + 20;								this.y = 15;			}		}				private function createButtons(){			var btn:Button;						for (var i:int=0;i<_buttonStrings.length;i++){				btn = new Button();				styleButton(btn);				btn.label = _buttonStrings[i];				btn.name = _buttonStrings[i];				btn.y = bg.height - 18;				btn.x = bg.width - ((btn.width + 10)*(i+1)) - 8;				btn.height = 30;				btn.addEventListener(MouseEvent.CLICK, onMouseEvent);				//btn.gotoAndStop(1);				btn.enabled = true;				addChild(btn);				btn.name = _buttonStrings[i];				_buttons[i] = btn;			}		}						public function styleButton(btn:Button) {			log("styleButton name:"+btn.name);						var fmt:TextFormat = new TextFormat();			fmt.color = 0xffffff;			fmt.bold = true;			fmt.font = "Arial Bold, _sans";			fmt.size = 16;			btn.setStyle("textFormat", fmt);					}				private function destroyButtons(){			for (var i:int=0;i<_buttons.length;i++){				(_buttons[i] as Button).removeEventListener(MouseEvent.CLICK, onMouseEvent);			}		}				private function onMouseEvent(e:Event) {			log("onMouseEvent type:"+e.type+", name:"+e.currentTarget.name);						switch (e.currentTarget){				case btn_close:					dispatchCloseEvent("cancel");					break;				default:					dispatchCloseEvent(e.currentTarget.name);					break;				}					}				override public function destroy():void{			super.destroy();			removeListeners();			destroyButtons();		}			}	}